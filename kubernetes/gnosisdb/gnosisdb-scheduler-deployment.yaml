apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gnosisdb-scheduler
  labels:
    app: gnosisdb-scheduler
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app: gnosisdb-scheduler
  template:
    metadata:
      labels:
        app: gnosisdb-scheduler
    spec:
      containers:
      - name: scheduler
        image: gnosispm/gnosisdb:v1.0.2 # Set gnosisdb version (It must be the same as web and worker deployments)
        imagePullPolicy: Always
        args: ["scripts/run_celery_scheduler.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "400m"
        livenessProbe:
          exec:
            command:
              - "pgrep"
              - "celery"
          initialDelaySeconds: 45
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - "pgrep"
              - "celery"
          initialDelaySeconds: 45
          periodSeconds: 5
        env:
          - name: ETH_PROCESS_BLOCKS
            value: "1000"
          - name: PYTHONPATH
            value: "/gnosisdb/gnosisdb"
          - name: DJANGO_SETTINGS_MODULE
            value: "config.settings.production"
          - name: ALLOWED_HOSTS # Domains which you want to allow separated by commas. Example: '127.0.0.1, localhost, .amazonaws.com'
            value: '*'
          - name: C_FORCE_ROOT # Celery must be root
            value: "false"
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: gnosisdb-database
                key: host
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: gnosisdb-database
                key: name
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: gnosisdb-database
                key: user
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gnosisdb-database
                key: password
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name: gnosisdb-database
                key: port
          - name: DEFAULT_FROM_EMAIL
            value: ""
          - name: EMAIL_HOST_PASSWORD
            value: ""
          - name: EMAIL_HOST
            value: ""
          - name: EMAIL_HOST_USER
            value: ""
          - name: EMAIL_PORT
            value: ""
          - name: EMAIL_SUBJECT_PREFIX
            value: "[GnosisDB]"
          - name: EMAIL_USE_TLS
            value: ""
          - name: ETHEREUM_NODE_HOST # It could be: domain or IP (Don't put the protocol)
            value: "localhost"
          - name: ETHEREUM_NODE_PORT
            value: "8545"
          - name: ETHEREUM_NODE_SSL # O -> HTTP, 1 -> HTTPS
            value: "0"
          - name: ETHEREUM_DEFAULT_ACCOUNT
            value: ""
          - name: ETHEREUM_DEFAULT_ACCOUNT_PRIVATE_KEY
            value: ""
          - name: IPFS_HOST
            value: "https://ipfs.infura.io"
          - name: IPFS_PORT
            value: "5001"
          - name: RABBIT_HOSTNAME # IP of your rabbit service
            value: "[IP]" # CUSTOM
          - name: RABBIT_USER
            value: gnosisdb
          - name: RABBIT_PASSWORD
            value: gnosisdb
          - name: RABBIT_PORT
            value: "5672"
          - name: RABBIT_QUEUE
            value: ""
          - name: SECRET_KEY # Django secret key
            value: "[DJANGO_SECRET_KEY]" # CUSTOM
          - name: CENTRALIZED_ORACLE_FACTORY
            value: "0xb3289eAAc0Fe3eD15Df177F925c6F8ceEB908b8f"
          - name: EVENT_FACTORY
            value: "0x0f60faf69F3Ac146e1E557247583BC0c84f9f086"
          - name: LMSR_MARKET_MAKER
            value: "0x11B5257396f156027B9232da7220bd7447282DB6"
          - name: MARKET_FACTORY
            value: "0xEAA325bACAe405fd5B45E9cF695D391F1C624A2f"
          - name: STANDARD_MARKET_FACTORY
            value: "0x5acFA40D828f2d3a88B49FF4dA31b868380ce414"
          - name: TOURNAMENT_TOKEN
            value: "0xa0c107Db0e9194c18359d3265289239453b56CF2"
          - name: UPORT_IDENTITY_MANAGER
            value: "0xABBcD5B340C80B5f1C0545C04C987b87310296aE"
